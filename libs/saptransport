#! /usr/bin/env bash

SAPTRANSPORT_ACTION_CPY="CPY"
SAPTRANSPORT_ACTION_ADD="ADD"
SAPTRANSPORT_ACTION_IMP="IMP"
SAPTRANSPORT_ACTION_DEL="DEL"

SAPTRANSPORT_STATUS_INITIAL="INITIAL"
SAPTRANSPORT_STATUS_RUNNING="RUNNING"
SAPTRANSPORT_STATUS_FAILED="FAILED"
SAPTRANSPORT_STATUS_FINISHED="FINISHED"
SAPTRANSPORT_STATUS_SKIPPED="SKIPPED"

function saptransport::copy() {
    local system="${1}"
    local transport="${2}"

    logger::log "T" "Running ${FUNCNAME}():"
    logger::log "T" "   system=${system}"
    logger::log "T" "   transport=${transport}"

    local action="${SAPTRANSPORT_ACTION_CPY}"

    tpcp::utils::record_status "${SAPTRANSPORT_STATUS_RUNNING}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

    sleep $(( ${RANDOM} % 10 + 1 ))

    if [[ $(( ${RANDOM} % 3 )) -eq 0 ]]; then
        tpcp::utils::record_status "${SAPTRANSPORT_STATUS_FAILED}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

        return 1
    fi

    tpcp::utils::record_status "${SAPTRANSPORT_STATUS_FINISHED}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

    return
}

function saptransport::add_to_buffer() {
    local system="${1}"
    local transport="${2}"

    logger::log "T" "Running ${FUNCNAME}():"
    logger::log "T" "   system=${system}"
    logger::log "T" "   transport=${transport}"

    local action="${SAPTRANSPORT_ACTION_ADD}"

    tpcp::utils::record_status "${SAPTRANSPORT_STATUS_RUNNING}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

    sleep $(( ${RANDOM} % 2 + 1 ))

    if [[ $(( ${RANDOM} % 3 )) -eq 0 ]]; then
        tpcp::utils::record_status "${SAPTRANSPORT_STATUS_FAILED}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

        return 1
    fi

    tpcp::utils::record_status "${SAPTRANSPORT_STATUS_FINISHED}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

    return
}

function saptransport::delete_from_buffer() {
    local system="${1}"
    local transport="${2}"

    logger::log "T" "Running ${FUNCNAME}():"
    logger::log "T" "   system=${system}"
    logger::log "T" "   transport=${transport}"

    local action="${SAPTRANSPORT_ACTION_DEL}"

    tpcp::utils::record_status "${SAPTRANSPORT_STATUS_RUNNING}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

    sleep $(( ${RANDOM} % 2 + 1 ))

    if [[ $(( ${RANDOM} % 3 )) -eq 0 ]]; then
        tpcp::utils::record_status "${SAPTRANSPORT_STATUS_FAILED}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

        return 1
    fi

    tpcp::utils::record_status "${SAPTRANSPORT_STATUS_FINISHED}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

    return
}

function saptransport::import() {
    local system="${1}"
    local transport="${2}"

    logger::log "T" "Running ${FUNCNAME}():"
    logger::log "T" "   system=${system}"
    logger::log "T" "   transport=${transport}"

    local action="${SAPTRANSPORT_ACTION_IMP}"

    tpcp::utils::record_status "${SAPTRANSPORT_STATUS_RUNNING}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

    sleep $(( ${RANDOM} % 20 + 1 ))

    if [[ $(( ${RANDOM} % 3 )) -eq 0 ]]; then
        tpcp::utils::record_status "${SAPTRANSPORT_STATUS_FAILED}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

        return 1
    fi

    tpcp::utils::record_status "${SAPTRANSPORT_STATUS_FINISHED}" "${TPCP_WORK_DIRPATH}" "${transport}" "${system}" "${action}"

    return
}

function saptransport::process_transport() {
    local transport="${1}"
    local system_list=("${!2}")
    local action_list=("${!3}")

    logger::log "T" "Running ${FUNCNAME}():"
    logger::log "T" "   transport=${transport}"
    logger::log "T" "   system_list=${system_list[@]}" # TODO: FIX array
    logger::log "T" "   action_list=${action_list[@]}" # TODO: FIX array

    logger::log "D" "Processing transport ${transport}."

    for system in "${system_list[@]}"; do
        saptransport::run_actions_on_system "${transport}" "${system}" "${action_list[@]}" &
    done

    wait
}

function saptransport::run_actions_on_system() {
    local transport="${1}"
    local system="${2}"
    local action_list=("${@:3}")

    logger::log "T" "Running ${FUNCNAME}():"
    logger::log "T" "   transport=${transport}"
    logger::log "T" "   system=${system}"
    logger::log "T" "   action_list=${action_list[@]}" # TODO: FIX array

    logger::log "D" "Running actions for transport ${transport} on system ${system}."

    for action in "${action_list[@]}"; do
        saptransport::run_action_on_system "${transport}" "${system}" "${action}"
    done
}

function saptransport::run_action_on_system() {
    local transport="${1}"
    local system="${2}"
    local action="${3}"

    logger::log "T" "Running ${FUNCNAME}():"
    logger::log "T" "   transport=${transport}"
    logger::log "T" "   system=${system}"
    logger::log "T" "   action=${action}"

    logger::log "D" "Running action ${action} for transport ${transport} on system ${system}."

    case "${action}" in
        "${SAPTRANSPORT_ACTION_CPY}" )
            saptransport::copy "${system}" "${transport}"
        ;;

        "${SAPTRANSPORT_ACTION_ADD}" )
            saptransport::add_to_buffer "${system}" "${transport}"
        ;;

        "${SAPTRANSPORT_ACTION_IMP}" )
            saptransport::import "${system}" "${transport}"
        ;;

        "${SAPTRANSPORT_ACTION_DEL}" )
            saptransport::delete_from_buffer "${system}" "${transport}"
        ;;

        * )
            tpcp::utils::terminate "'${action}' is not a valid action."
    esac
}
